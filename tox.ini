# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
skip_missing_interpreters=True
# When updating, don't forget .travis.yml!
envlist = py27, pycover, pep8, pylint, docs, js, jscover
#, py32, py33, py34, py35, pypy, jython, 
skipsdist = True

[pytest]
testpaths = tests

[testenv]
changedir = remote_thermo_measurement
commands = 
	./setup.py develop
	py.test tests.py
deps =
	-r{toxinidir}/remote_thermo_measurement/dev-requirements.txt
#	-r{toxinidir}/remote_thermo_measurement/requirements.txt

[testenv:js]
changedir = .
whitelist_externals = 
	npm
	karma
passenv = DISPLAY
deps = jquery
	sinon
	qunitjs
	karma
	karma-qunit
	karma-phantomjs-launcher
	phantomjs-prebuilt
	karma-coverage
	karma-threshold-reporter
install_command = npm install {opts} {packages}
commands = 
	karma start tests.conf.js

[testenv:pycover]
changedir = {[testenv]changedir}
commands =
	./setup.py develop
	coverage erase
	rm -f {toxinidir}/coverage.xml
	coverage run -a --include="thermo_daemon.py" -m unittest tests
	coverage xml
	mkdir -p {toxinidir}/coverage
	cp -v coverage.xml {toxinidir}/coverage
	coverage report -m --fail-under=100
deps = {[testenv]deps}
#ignore_errors = True
whitelist_externals = 
	cp
	rm
	mkdir
	{[testenv]deps}

[testenv:jscover]
changedir = {[testenv:js]changedir}
whitelist_externals = {[testenv:js]whitelist_externals}
passenv = {[testenv:js]passenv}
deps = 
	{[testenv:js]deps}
install_command = {[testenv:js]install_command}
commands =
	karma start --reporters coverage,threshold tests.conf.js

[testenv:codacy-coverage-upload]
commands = 
	npm install codacy-coverage
	{[testenv:pycover]commands}
	tox -e js
	python-codacy-coverage -r {toxinidir}/coverage/coverage.xml
	bash -c "cat coverage/jscover.lcov | ./node_modules/.bin/codacy-coverage"
deps = 
	codacy-coverage
	{[testenv]deps}
passenv = CODACY_PROJECT_TOKEN
ignore_errors = True
whitelist_externals =
	{[testenv:pycover]whitelist_externals}
	{[testenv:js]whitelist_externals}
	bash
	mkdir
	tox

[testenv:pep8]
changedir = {[testenv]changedir}
commands = pep8 --show-source --count thermo_daemon.py tests.py
deps = pep8

[testenv:pylint]
whitelist_externals = bash
commands= bash -c "pylint -E thermo_daemon"
deps=pylint
	-r{toxinidir}/requirements.txt
	-r{toxinidir}/dev-requirements.txt

[testenv:docs]
changedir = {[testenv]changedir}/docs
commands = 
	sphinx-build -aEn -b html . _build/html
	sphinx-build -aEn -b coverage . _build/coverage
deps = sphinx

[pep8]
show-source = True
count = True

